import{r as t,o,c,a as n,b as a,F as l,d as p,e}from"./app.e1d78c38.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";var u="/JintaoYang-LearningPython/assets/python-logo-master-v3-TM.515d56e5.png";const i={},k=p('<h1 id="\u6307\u5357" tabindex="-1"><a class="header-anchor" href="#\u6307\u5357" aria-hidden="true">#</a> \u6307\u5357</h1><h2 id="\u4ECB\u7ECD-\u{1F4D8}" tabindex="-1"><a class="header-anchor" href="#\u4ECB\u7ECD-\u{1F4D8}" aria-hidden="true">#</a> \u4ECB\u7ECD \u{1F4D8}</h2><blockquote><p>Python\u7531\u8377\u5170\u6570\u5B66\u548C\u8BA1\u7B97\u673A\u79D1\u5B66\u7814\u7A76\u5B66\u4F1A\u7684\u5409\u591A\xB7\u8303\u7F57\u82CF\u59C6 \u4E8E1990 \u5E74\u4EE3\u521D\u8BBE\u8BA1\uFF0C\u4F5C\u4E3A\u4E00\u95E8\u53EB\u505AABC\u8BED\u8A00\u7684\u66FF\u4EE3\u54C1\u3002 Python\u63D0\u4F9B\u4E86\u9AD8\u6548\u7684\u9AD8\u7EA7\u6570\u636E\u7ED3\u6784\uFF0C\u8FD8\u80FD\u7B80\u5355\u6709\u6548\u5730\u9762\u5411\u5BF9\u8C61\u7F16\u7A0B\u3002Python\u8BED\u6CD5\u548C\u52A8\u6001\u7C7B\u578B\uFF0C\u4EE5\u53CA\u89E3\u91CA\u578B\u8BED\u8A00\u7684\u672C\u8D28\uFF0C\u4F7F\u5B83\u6210\u4E3A\u591A\u6570\u5E73\u53F0\u4E0A\u5199\u811A\u672C\u548C\u5FEB\u901F\u5F00\u53D1\u5E94\u7528\u7684\u7F16\u7A0B\u8BED\u8A00\uFF0C\u968F\u7740\u7248\u672C\u7684\u4E0D\u65AD\u66F4\u65B0\u548C\u8BED\u8A00\u65B0\u529F\u80FD\u7684\u6DFB\u52A0\uFF0C\u9010\u6E10\u88AB\u7528\u4E8E\u72EC\u7ACB\u7684\u3001\u5927\u578B\u9879\u76EE\u7684\u5F00\u53D1\u3002</p></blockquote><p><img src="'+u+`" alt="\u5B66\u4E60Python"></p><p>\u5B66\u4E60 Python.</p><h2 id="\u5B89\u88C5-\u{1F529}" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5-\u{1F529}" aria-hidden="true">#</a> \u5B89\u88C5 \u{1F529}</h2><p>\u7565\u3002</p><h2 id="\u4F9D\u8D56\u73AF\u5883\u7B49-\u{1F579}\uFE0F" tabindex="-1"><a class="header-anchor" href="#\u4F9D\u8D56\u73AF\u5883\u7B49-\u{1F579}\uFE0F" aria-hidden="true">#</a> \u4F9D\u8D56\u73AF\u5883\u7B49 \u{1F579}\uFE0F</h2><p>\u7565\u3002</p><h2 id="\u4F7F\u7528-\u{1F518}" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-\u{1F518}" aria-hidden="true">#</a> \u4F7F\u7528 \u{1F518}</h2><p>\u638C\u63E1\u5C1A\u4E0D\u5B8C\u5168\uFF0C\u6B64\u5904\u8FD8\u4E0D\u4F1A\u68B3\u7406\u76EE\u5F55\u67B6\u6784\uFF0C\u60F3\u5230\u54EA\u5199\u5230\u54EA\u3002</p><h3 id="sys-stdout-file-\u65E5\u5FD7\u8BB0\u5F55-\u{1F4D3}" tabindex="-1"><a class="header-anchor" href="#sys-stdout-file-\u65E5\u5FD7\u8BB0\u5F55-\u{1F4D3}" aria-hidden="true">#</a> sys.stdout = file \u65E5\u5FD7\u8BB0\u5F55 \u{1F4D3}</h3><p>Python \u6807\u51C6\u8F93\u51FA <code>sys.stdout</code> \u91CD\u5B9A\u5411 \uFF08<em>\u4ECE\u63A7\u5236\u53F0\u91CD\u5B9A\u5411\u5230\u6587\u4EF6</em>\uFF09</p><p>\u539F\u59CB\u7684 sys.stdout \u6307\u5411\u63A7\u5236\u53F0\uFF0C\u5982\u679C\u628A\u6587\u4EF6\u7684\u5BF9\u8C61\u7684\u5F15\u7528\u8D4B\u7ED9 <code>sys.stdout</code>\uFF0C\u90A3\u4E48 <code>print</code> \u8C03\u7528\u7684\u5C31\u662F\u6587\u4EF6\u5BF9\u8C61\u7684 <code>write</code> \u65B9\u6CD5\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> sys

f_handler<span class="token operator">=</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;out.log&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>stdout<span class="token operator">=</span>f_handler
<span class="token keyword">print</span> <span class="token string">&#39;hello&#39;</span> 
<span class="token comment"># \u8FD9\u4E2A hello \u4E0D\u80FD\u5728\u63A7\u5236\u53F0\u67E5\u770B</span>
<span class="token comment"># \u8FD9\u4E2A hello \u5728\u6587\u4EF6 out.log \u4E2D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u65F6\u95F4\u6233-\u{1F561}\uFE0F" tabindex="-1"><a class="header-anchor" href="#\u65F6\u95F4\u6233-\u{1F561}\uFE0F" aria-hidden="true">#</a> \u65F6\u95F4\u6233 \u{1F561}\uFE0F</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime

<span class="token comment"># \u73B0\u5728\u65F6\u95F4-\u683C\u5F0F\u5316</span>
datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&#39;%Y-%m-%d-%H:%M:%S&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># \u6253\u5370\u73B0\u5728\u65F6\u95F4</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u76EE\u5F55\u6709\u65E0\u5224\u65AD\u53CA\u65B0\u5EFA-\u{1F4C7}" tabindex="-1"><a class="header-anchor" href="#\u76EE\u5F55\u6709\u65E0\u5224\u65AD\u53CA\u65B0\u5EFA-\u{1F4C7}" aria-hidden="true">#</a> \u76EE\u5F55\u6709\u65E0\u5224\u65AD\u53CA\u65B0\u5EFA \u{1F4C7}</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> os

<span class="token comment"># \u5224\u65AD\u6709\u65E0</span>
<span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>save_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token comment"># \u65B0\u5EFA\u76EE\u5F55</span>
  os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>save_dir<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="argparse-\u53C2\u6570\u4F20\u5165-\u2699\uFE0F" tabindex="-1"><a class="header-anchor" href="#argparse-\u53C2\u6570\u4F20\u5165-\u2699\uFE0F" aria-hidden="true">#</a> argparse \u53C2\u6570\u4F20\u5165 \u2699\uFE0F</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> argparse

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-sd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--save-dir&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;./results&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;path to save&#39;</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
  
main<span class="token punctuation">(</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="\u591A\u5361\u8BAD\u7EC3-\u{1F5A5}\u{1F5A5}\u{1F5A5}\u{1F5A5}" tabindex="-1"><a class="header-anchor" href="#\u591A\u5361\u8BAD\u7EC3-\u{1F5A5}\u{1F5A5}\u{1F5A5}\u{1F5A5}" aria-hidden="true">#</a> \u591A\u5361\u8BAD\u7EC3 \u{1F5A5}\u{1F5A5}\u{1F5A5}\u{1F5A5}</h3><p><code>torch.nn.DataParallel</code>\u591A\u5361\u8BAD\u7EC3\uFF0C\u53EF\u80FD\u4F1A\u5F71\u54CD\u6027\u80FD\u548C\u53EF\u590D\u73B0\u6027\uFF0C\u8C28\u614E\u4F7F\u7528\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># torch.nn.DataParallel</span>
device_ids <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span>
net <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>DataParallel<span class="token punctuation">(</span>net<span class="token punctuation">,</span> device_ids<span class="token operator">=</span>device_ids<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,24),d={href:"https://zhuanlan.zhihu.com/p/102697821",target:"_blank",rel:"noopener noreferrer"},b=e("\u53C2\u80031:\u77E5\u4E4E"),m={href:"https://www.zhihu.com/pin/1324807219972300800",target:"_blank",rel:"noopener noreferrer"},h=e("\u53C2\u80032:\u95EE\u9898"),g=p(`<h3 id="torch\u52A0\u901F\u8BAD\u7EC3gpu-\u23E9\uFE0F" tabindex="-1"><a class="header-anchor" href="#torch\u52A0\u901F\u8BAD\u7EC3gpu-\u23E9\uFE0F" aria-hidden="true">#</a> Torch\u52A0\u901F\u8BAD\u7EC3GPU \u23E9\uFE0F</h3><p><code>torch.backends.cudnn.benchmark = True</code>\u5C06\u4F1A\u8BA9\u7A0B\u5E8F\u5728\u5F00\u59CB\u65F6\u82B1\u8D39\u4E00\u70B9\u989D\u5916\u65F6\u95F4\uFF0C\u4E3A\u6574\u4E2A\u7F51\u7EDC\u7684\u6BCF\u4E2A\u5377\u79EF\u5C42\u641C\u7D22\u6700\u9002\u5408\u5B83\u7684\u5377\u79EF\u5B9E\u73B0\u7B97\u6CD5\uFF0C\u8FDB\u800C\u5B9E\u73B0\u7F51\u7EDC\u7684\u52A0\u901F\u3002</p><p>\u9002\u7528\u573A\u666F\u662F<strong>\u7F51\u7EDC\u7ED3\u6784\u56FA\u5B9A\uFF08\u4E0D\u662F\u52A8\u6001\u53D8\u5316\u7684\uFF09\uFF0C\u7F51\u7EDC\u7684\u8F93\u5165\u5F62\u72B6\uFF08\u5305\u62EC batch size\uFF0C\u56FE\u7247\u5927\u5C0F\uFF0C\u8F93\u5165\u7684\u901A\u9053\uFF09\u662F\u4E0D\u53D8\u7684</strong>\uFF0C\u5176\u5B9E\u4E5F\u5C31\u662F\u4E00\u822C\u60C5\u51B5\u4E0B\u90FD\u6BD4\u8F83\u9002\u7528\u3002</p><p>\u53CD\u4E4B\uFF0C\u5982\u679C\u5377\u79EF\u5C42\u7684\u8BBE\u7F6E\u4E00\u76F4\u53D8\u5316\uFF0C\u5C06\u4F1A\u5BFC\u81F4\u7A0B\u5E8F\u4E0D\u505C\u5730\u505A\u4F18\u5316\uFF0C\u53CD\u800C\u4F1A\u8017\u8D39\u66F4\u591A\u7684\u65F6\u95F4\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">if</span> args<span class="token punctuation">.</span>use_gpu <span class="token keyword">and</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">&#39;cuda&#39;</span><span class="token punctuation">)</span>
    torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>benchmark <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token comment"># \u4E00\u822C\u52A0\u5728\u5F00\u5934</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">&#39;cpu&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,5),y={href:"https://zhuanlan.zhihu.com/p/73711222",target:"_blank",rel:"noopener noreferrer"},_=e("\u53C2\u8003:\u77E5\u4E4E"),v=p(`<h3 id="print-\u52A8\u6001\u6253\u5370-\u{1F5A8}\uFE0F" tabindex="-1"><a class="header-anchor" href="#print-\u52A8\u6001\u6253\u5370-\u{1F5A8}\uFE0F" aria-hidden="true">#</a> print \u52A8\u6001\u6253\u5370 \u{1F5A8}\uFE0F</h3><p>\u5B9E\u73B0\u539F\u5730\u8F93\u51FA\u52A8\u6001\u8FDB\u5EA6\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Loading&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;.&quot;</span><span class="token operator">*</span>i<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;\\r&quot;</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="pytorch-model-train-\u26F9\u200D\u2642\uFE0F" tabindex="-1"><a class="header-anchor" href="#pytorch-model-train-\u26F9\u200D\u2642\uFE0F" aria-hidden="true">#</a> PyTorch model.train() \u26F9\u200D\u2642\uFE0F</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>model<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment"># \u5728\u4F7F\u7528pytorch\u6784\u5EFA\u795E\u7ECF\u7F51\u7EDC\u7684\u65F6\u5019\uFF0C\u8BAD\u7EC3\u8FC7\u7A0B\u4E2D\u4F1A\u5728\u7A0B\u5E8F\u4E0A\u65B9\u6DFB\u52A0\u4E00\u53E5model.train()\uFF0C\u4F5C\u7528\u662F\u542F\u7528batch normalization\u548Cdrop out\u3002</span>
model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment"># \u6D4B\u8BD5\u8FC7\u7A0B\u4E2D\u4F1A\u4F7F\u7528model.eval()\uFF0C\u8FD9\u65F6\u795E\u7ECF\u7F51\u7EDC\u4F1A\u6CBF\u7528batch normalization\u7684\u503C\uFF0C\u5E76\u4E0D\u4F7F\u7528drop out\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="assert-\u65AD\u8A00-\u2753\uFE0F" tabindex="-1"><a class="header-anchor" href="#assert-\u65AD\u8A00-\u2753\uFE0F" aria-hidden="true">#</a> assert \u65AD\u8A00 \u2753\uFE0F</h3><p>\u8FD8\u4E0D\u4F1A</p><h3 id="yaml\u6587\u4EF6\u7684\u8BFB\u5199-\u{1F4C4}" tabindex="-1"><a class="header-anchor" href="#yaml\u6587\u4EF6\u7684\u8BFB\u5199-\u{1F4C4}" aria-hidden="true">#</a> YAML\u6587\u4EF6\u7684\u8BFB\u5199 \u{1F4C4}</h3><p>\u8FD8\u4E0D\u4F1A</p><h3 id="pytorch-pth-\u4FDD\u5B58\u6570\u636E-\u{1F4BE}" tabindex="-1"><a class="header-anchor" href="#pytorch-pth-\u4FDD\u5B58\u6570\u636E-\u{1F4BE}" aria-hidden="true">#</a> Pytorch .pth \u4FDD\u5B58\u6570\u636E \u{1F4BE}</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>i<span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">for</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">:</span>
  <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">:</span>
      x_save_pt <span class="token operator">=</span> out_resize_tensor <span class="token comment">#torch.from_numpy(out_display_img1).unsqueeze(0)</span>
      y_save_pt <span class="token operator">=</span> test_labels
  <span class="token keyword">else</span> <span class="token punctuation">:</span>
      x_save_pt <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>x_save_pt<span class="token punctuation">,</span> out_resize_tensor<span class="token punctuation">]</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">#x_save_pt = torch.cat([x_save_pt, torch.from_numpy(out_display_img1).unsqueeze(0)], dim=0)</span>
      y_save_pt <span class="token operator">=</span> torch<span class="token punctuation">.</span>cat<span class="token punctuation">(</span><span class="token punctuation">[</span>y_save_pt<span class="token punctuation">,</span> test_labels<span class="token punctuation">]</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
  i <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span>

torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">:</span> x_save_pt<span class="token punctuation">,</span> <span class="token string">&#39;target&#39;</span><span class="token punctuation">:</span> y_save_pt<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;./12_googlenet_&quot;</span> <span class="token operator">+</span> Atk_Type <span class="token operator">+</span> <span class="token string">&quot;.pt&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="pytorch-\u6570\u636E\u4E4B\u95F4\u8F6C\u6362-\u{1F50C}" tabindex="-1"><a class="header-anchor" href="#pytorch-\u6570\u636E\u4E4B\u95F4\u8F6C\u6362-\u{1F50C}" aria-hidden="true">#</a> Pytorch \u6570\u636E\u4E4B\u95F4\u8F6C\u6362 \u{1F50C}</h3><p><strong>1. PIL, Numpy to Tensor</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> torchvision<span class="token punctuation">.</span>transforms <span class="token keyword">as</span> transforms
x_Tensor <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x_PIL<span class="token punctuation">)</span><span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
x_Tensor <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>x_Numpy<span class="token punctuation">)</span><span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>2. Tensor to PIL</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> torchvision<span class="token punctuation">.</span>transforms <span class="token keyword">as</span> transforms

unloader <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToPILImage<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">trans_image</span><span class="token punctuation">(</span>tensor<span class="token punctuation">)</span><span class="token punctuation">:</span>
    image <span class="token operator">=</span> tensor<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>clone<span class="token punctuation">(</span><span class="token punctuation">)</span>
    image <span class="token operator">=</span> image<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    image <span class="token operator">=</span> unloader<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
    image <span class="token operator">=</span> image<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">299</span><span class="token punctuation">,</span> <span class="token number">299</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Image<span class="token punctuation">.</span>ANTIALIAS<span class="token punctuation">)</span> <span class="token comment"># \u7F29\u653E</span>
    <span class="token keyword">return</span> image

x_PIL <span class="token operator">=</span> trans_image<span class="token punctuation">(</span>x_Tensor<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>3. PIL to Numpy</strong></p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>x_Numpy <span class="token operator">=</span> numpy<span class="token punctuation">.</span>array<span class="token punctuation">(</span>x_PIL<span class="token punctuation">,</span> dtype <span class="token operator">=</span> numpy<span class="token punctuation">.</span>float32<span class="token punctuation">)</span> <span class="token comment"># \u6570\u636E\u7C7B\u578B</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="pytorch-tensor\u6570\u636E\u7EF4\u5EA6\u4EA4\u6362-\u26D7" tabindex="-1"><a class="header-anchor" href="#pytorch-tensor\u6570\u636E\u7EF4\u5EA6\u4EA4\u6362-\u26D7" aria-hidden="true">#</a> Pytorch Tensor\u6570\u636E\u7EF4\u5EA6\u4EA4\u6362 \u26D7</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>b <span class="token operator">=</span> a<span class="token punctuation">.</span>permute<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="shell-\u811A\u672C-\u{1F5D4}" tabindex="-1"><a class="header-anchor" href="#shell-\u811A\u672C-\u{1F5D4}" aria-hidden="true">#</a> Shell \u811A\u672C \u{1F5D4}</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token keyword">for</span> <span class="token for-or-select variable">TYPE</span> <span class="token keyword">in</span> clean adv
<span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span>  <span class="token string">&quot;TYPE:  <span class="token variable">\${TYPE}</span>&quot;</span>
    python googlenet.py --data_test Demo --scale <span class="token number">2</span> --pre_train download --test_only --save_results --type <span class="token variable">\${TYPE}</span>
    python eval_googlenet.py --atk-type <span class="token variable">\${TYPE}</span> --test-batch-size <span class="token number">64</span>  --date <span class="token number">20220316</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="shell-\u811A\u672C-\u5E26\u8FD0\u884C\u65F6\u95F4\u8BB0\u5F55-\u{1F5D4}\u{1F561}\uFE0F" tabindex="-1"><a class="header-anchor" href="#shell-\u811A\u672C-\u5E26\u8FD0\u884C\u65F6\u95F4\u8BB0\u5F55-\u{1F5D4}\u{1F561}\uFE0F" aria-hidden="true">#</a> Shell \u811A\u672C-\u5E26\u8FD0\u884C\u65F6\u95F4\u8BB0\u5F55 \u{1F5D4}\u{1F561}\uFE0F</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">starttime</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +<span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token variable">\`</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Shell_Start_Time :            &quot;</span><span class="token variable">$starttime</span>

<span class="token comment">#sleep 1m</span>
<span class="token comment">#sleep 1s</span>

<span class="token assign-left variable">endtime</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +<span class="token string">&#39;%Y-%m-%d %H:%M:%S&#39;</span><span class="token variable">\`</span></span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Shell_End_Time :              &quot;</span><span class="token variable">$endtime</span>
<span class="token assign-left variable">time1</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>$<span class="token punctuation">(</span>date <span class="token operator">+</span><span class="token operator">%</span>s <span class="token operator">-</span>d &quot;$endtime&quot;<span class="token punctuation">)</span> <span class="token operator">-</span> $<span class="token punctuation">(</span>date <span class="token operator">+</span><span class="token operator">%</span>s <span class="token operator">-</span>d &quot;$starttime&quot;<span class="token variable">))</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot; &quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;Total_Shell_Time :            &quot;</span>   <span class="token variable"><span class="token variable">$((</span>$time1<span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">24</span><span class="token variable">))</span></span> <span class="token string">&quot;days  &quot;</span> <span class="token variable"><span class="token variable">$((</span>$time1<span class="token operator">/</span><span class="token number">60</span><span class="token operator">/</span><span class="token number">60</span><span class="token variable">))</span></span> <span class="token string">&quot;hours  &quot;</span> <span class="token variable"><span class="token variable">$((</span>$time1<span class="token operator">/</span><span class="token number">60</span><span class="token variable">))</span></span> <span class="token string">&quot;minutes  &quot;</span> <span class="token variable"><span class="token variable">$((</span>$time1<span class="token operator">%</span><span class="token number">60</span><span class="token variable">))</span></span> <span class="token string">&quot;seconds&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot; &quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="normalization\u7684\u6270\u52A8\u6C42\u89E3torch\u4FDD\u5B58-\u2796" tabindex="-1"><a class="header-anchor" href="#normalization\u7684\u6270\u52A8\u6C42\u89E3torch\u4FDD\u5B58-\u2796" aria-hidden="true">#</a> Normalization\u7684\u6270\u52A8\u6C42\u89E3Torch\u4FDD\u5B58 \u2796</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> torch

unloader <span class="token operator">=</span> transforms<span class="token punctuation">.</span>ToPILImage<span class="token punctuation">(</span><span class="token punctuation">)</span>

perturb <span class="token operator">=</span> <span class="token punctuation">(</span>img_fgm <span class="token operator">-</span> img<span class="token punctuation">)</span>
p_min <span class="token operator">=</span> torch<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span>perturb<span class="token punctuation">)</span>
p_max <span class="token operator">=</span> torch<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span>perturb<span class="token punctuation">)</span>
normal_p <span class="token operator">=</span> <span class="token punctuation">(</span>perturb <span class="token operator">+</span> p_min<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>p_max <span class="token operator">-</span> p_min<span class="token punctuation">)</span>
normal_p <span class="token operator">=</span> torch<span class="token punctuation">.</span>squeeze<span class="token punctuation">(</span>normal_p<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
normal_p <span class="token operator">=</span> unloader<span class="token punctuation">(</span>normal_p<span class="token punctuation">)</span>
name <span class="token operator">=</span> <span class="token string">&#39;adv_perturb.bmp&#39;</span>
normal_p<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;./fgsm_test/&#39;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="markdown-\u5199\u76EE\u5F55-\u5E26\u8DF3\u8F6C-\u21AA\uFE0F" tabindex="-1"><a class="header-anchor" href="#markdown-\u5199\u76EE\u5F55-\u5E26\u8DF3\u8F6C-\u21AA\uFE0F" aria-hidden="true">#</a> MarkDown \u5199\u76EE\u5F55\uFF0C\u5E26\u8DF3\u8F6C \u21AA\uFE0F</h3><p>\u4E0D\u80FD\u5E26\u7A7A\u683C</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> \u76EE\u5F55</span>

<span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u8BBA\u6587\u89E3\u8BFB</span>](<span class="token url">#\u8BBA\u6587\u89E3\u8BFB</span>)</span>
  <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">III. \u9632\u5FA1\u6A21\u578B</span>](<span class="token url">#III_\u9632\u5FA1\u6A21\u578B</span>)</span>
    <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">A. Image Reconstruction Network</span>](<span class="token url">#A_Image_Reconstruction_Network</span>)</span>
      <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u6B8B\u5DEE\u5757</span>](<span class="token url">#\u6B8B\u5DEE\u5757</span>)</span>
      <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u968F\u673A\u5316\u5C42</span>](<span class="token url">#\u968F\u673A\u5316\u5C42</span>)</span>
    <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">B. Perceptual Loss</span>](<span class="token url">#B_Perceptual_Loss</span>)</span>
  <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">IV. \u5B9E\u9A8C</span>](<span class="token url">#IV_\u5B9E\u9A8C</span>)</span>
    <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">A. Preparation</span>](<span class="token url">#A_Preparation</span>)</span>
      <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u76EE\u6807\u6A21\u578B</span>](<span class="token url">#\u76EE\u6807\u6A21\u578B</span>)</span>
      <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u653B\u51FB\u65B9\u6CD5</span>](<span class="token url">#\u653B\u51FB\u65B9\u6CD5</span>)</span>
      <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u6570\u636E\u96C6</span>](<span class="token url">#\u6570\u636E\u96C6</span>)</span>
      <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u5B9E\u65BD\u7EC6\u8282</span>](<span class="token url">#\u5B9E\u65BD\u7EC6\u8282</span>)</span>
<span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u4EE3\u7801\u8FD0\u884C</span>](<span class="token url">#\u4EE3\u7801\u8FD0\u884C</span>)</span>
  <span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u8FDB\u5165\u76EE\u5F55</span>](<span class="token url">#\u8FDB\u5165\u76EE\u5F55</span>)</span>
<span class="token list punctuation">-</span> <span class="token url">[<span class="token content">\u53C2\u8003\u6587\u732E</span>](<span class="token url">#\u53C2\u8003\u6587\u732E</span>)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="pdb\u8C03\u8BD5\u5668-\u{1F468}\u{1F3FB}\u200D\u{1F4BB}" tabindex="-1"><a class="header-anchor" href="#pdb\u8C03\u8BD5\u5668-\u{1F468}\u{1F3FB}\u200D\u{1F4BB}" aria-hidden="true">#</a> pdb\u8C03\u8BD5\u5668 \u{1F468}\u{1F3FB}\u200D\u{1F4BB}</h3><ul><li>ENTER (\u91CD\u590D\u4E0A\u6B21\u547D\u4EE4)</li><li>c (\u7EE7\u7EED)</li><li>l (\u67E5\u627E\u5F53\u524D\u4F4D\u4E8E\u54EA\u91CC)</li><li>s (\u8FDB\u5165\u5B50\u7A0B\u5E8F,\u5982\u679C\u5F53\u524D\u6709\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\uFF0C\u90A3\u4E48 s \u4F1A\u8FDB\u5165\u88AB\u8C03\u7528\u7684\u51FD\u6570\u4F53)</li><li>n(ext) \u8BA9\u7A0B\u5E8F\u8FD0\u884C\u4E0B\u4E00\u884C\uFF0C\u5982\u679C\u5F53\u524D\u8BED\u53E5\u6709\u4E00\u4E2A\u51FD\u6570\u8C03\u7528\uFF0C\u7528 n \u662F\u4E0D\u4F1A\u8FDB\u5165\u88AB\u8C03\u7528\u7684\u51FD\u6570\u4F53\u4E2D\u7684</li><li>r (\u8FD0\u884C\u76F4\u5230\u5B50\u7A0B\u5E8F\u7ED3\u675F)</li><li>!&lt;python \u547D\u4EE4&gt;</li><li>h (\u5E2E\u52A9)</li><li>a(rgs) \u6253\u5370\u5F53\u524D\u51FD\u6570\u7684\u53C2\u6570</li><li>j(ump) \u8BA9\u7A0B\u5E8F\u8DF3\u8F6C\u5230\u6307\u5B9A\u7684\u884C\u6570</li><li>l(ist) \u53EF\u4EE5\u5217\u51FA\u5F53\u524D\u5C06\u8981\u8FD0\u884C\u7684\u4EE3\u7801\u5757</li><li>p(rint) \u6700\u6709\u7528\u7684\u547D\u4EE4\u4E4B\u4E00\uFF0C\u6253\u5370\u67D0\u4E2A\u53D8\u91CF</li><li>q(uit) \u9000\u51FA\u8C03\u8BD5</li><li>r(eturn) \u7EE7\u7EED\u6267\u884C\uFF0C\u76F4\u5230\u51FD\u6570\u4F53\u8FD4\u56DE</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> pdb

pdb<span class="token punctuation">.</span>set_trace<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="pytorch-n-dataloader-\u540C\u5E8F\u8BAD\u7EC3-\u270C\uFE0F" tabindex="-1"><a class="header-anchor" href="#pytorch-n-dataloader-\u540C\u5E8F\u8BAD\u7EC3-\u270C\uFE0F" aria-hidden="true">#</a> PyTorch-N_DataLoader-\u540C\u5E8F\u8BAD\u7EC3 \u270C\uFE0F</h3><ul><li>\u8BFB\u53D6DataLoader, \u8BBE\u5B9Agenerator</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">data_loader_folder</span><span class="token punctuation">(</span>samples_dir<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
                       b_s<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
                       shuffle_bi<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
                       n_workers<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
                       ran_num<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> Data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">:</span>
    data_transform <span class="token operator">=</span> transforms<span class="token punctuation">.</span>Compose<span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        transforms<span class="token punctuation">.</span>ToTensor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    train_data <span class="token operator">=</span> Datasets<span class="token punctuation">.</span>ImageFolder<span class="token punctuation">(</span>root<span class="token operator">=</span>samples_dir<span class="token punctuation">,</span> 
                                      transform<span class="token operator">=</span>data_transform<span class="token punctuation">)</span>
    g <span class="token operator">=</span> torch<span class="token punctuation">.</span>Generator<span class="token punctuation">(</span><span class="token punctuation">)</span>
    g<span class="token punctuation">.</span>manual_seed<span class="token punctuation">(</span>ran_num<span class="token punctuation">)</span>
    train_data_loader <span class="token operator">=</span> Data<span class="token punctuation">.</span>DataLoader<span class="token punctuation">(</span>train_data<span class="token punctuation">,</span> 
                                        batch_size<span class="token operator">=</span>b_s<span class="token punctuation">,</span> 
                                        shuffle<span class="token operator">=</span>shuffle_bi<span class="token punctuation">,</span>
                                        num_workers<span class="token operator">=</span>n_workers<span class="token punctuation">,</span> 
                                        generator<span class="token operator">=</span>g<span class="token punctuation">)</span>
    <span class="token keyword">return</span> train_data_loader
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ul><li>\u6BCF\u4E2Aepoch\uFF0C\u4EA7\u751F\u4E0D\u540C\u968F\u673A\u6570\uFF0C\u4F20\u7ED9DataLoader\u4E2D\u7684generator</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">data_loader_hook</span><span class="token punctuation">(</span>dir2<span class="token punctuation">,</span> dir3<span class="token punctuation">,</span> batch_size1<span class="token punctuation">,</span> epoch<span class="token punctuation">)</span><span class="token punctuation">:</span>
    rdx <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
    loaders1 <span class="token operator">=</span> data_loader_folder<span class="token punctuation">(</span>dir2<span class="token punctuation">,</span> 
                                  b_s<span class="token operator">=</span>batch_size1<span class="token punctuation">,</span> 
                                  shuffle_bi<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> 
                                  n_workers<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> 
                                  ran_num<span class="token operator">=</span>rdx<span class="token punctuation">)</span>
    loaders2 <span class="token operator">=</span> data_loader_folder<span class="token punctuation">(</span>dir3<span class="token punctuation">,</span> 
                                  b_s<span class="token operator">=</span>batch_size1<span class="token punctuation">,</span> 
                                  shuffle_bi<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> 
                                  n_workers<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> 
                                  ran_num<span class="token operator">=</span>rdx<span class="token punctuation">)</span>
    <span class="token keyword">return</span> loaders1<span class="token punctuation">,</span> loaders2
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>N_DataLoader\u8BAD\u7EC3-zip-zip(*)\u8BFB\u53D6</li></ul><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>start_epoch<span class="token punctuation">,</span> end_epoch<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data_loader1<span class="token punctuation">,</span> data_loader2 <span class="token operator">=</span> data_loader_hook<span class="token punctuation">(</span>dir4<span class="token punctuation">,</span> 
                                                  dir5<span class="token punctuation">,</span> 
                                                  batch_size1<span class="token punctuation">,</span> 
                                                  epoch<span class="token punctuation">)</span>
    model<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> num_batches<span class="token punctuation">,</span> data_fuse <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>data_loader1<span class="token punctuation">,</span> data_loader2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        load_img<span class="token punctuation">,</span> load_lab <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token operator">*</span>data_fuse<span class="token punctuation">)</span>
        images_adv<span class="token punctuation">,</span> images_clean <span class="token operator">=</span> load_img
        target_adv<span class="token punctuation">,</span> target_clean <span class="token operator">=</span> load_lab
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="cmd\u5B9E\u65F6\u5237\u65B0\u884C\u5185\u5BB9-\u{1F5A5}\uFE0F" tabindex="-1"><a class="header-anchor" href="#cmd\u5B9E\u65F6\u5237\u65B0\u884C\u5185\u5BB9-\u{1F5A5}\uFE0F" aria-hidden="true">#</a> cmd\u5B9E\u65F6\u5237\u65B0\u884C\u5185\u5BB9 \u{1F5A5}\uFE0F</h3><p>\u8003\u8651\u4EE5\u4E0B\u7B80\u5355\u7684Python\u811A\u672C\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">import</span> sys
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token comment">#sys.stdout.flush()</span>
  time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD9\u662F\u4E3A\u4E86\u6253\u5370\u6BCF\u79D2\u4E94\u79D2\u949F\u4E00\u4E2A\u53F7\u7801\uFF0C\u4F60\u8981\u662F\u8DD1\u4E0D\u8FC7\u5B83\uFF0C\u56E0\u4E3A\u5B83\u662F\u73B0\u5728\uFF08\u53D6\u51B3\u4E8E\u9ED8\u8BA4\u7684\u7CFB\u7EDF\u7F13\u5B58\uFF09\uFF0C\u4F60\u53EF\u80FD\u770B\u4E0D\u5230\u4EFB\u4F55\u8F93\u51FA\uFF0C\u76F4\u5230\u811A\u672C\u5B8C\u6210\uFF0C\u7136\u540E\u4E00\u4E0B\u5B50\u4F60\u4F1A\u770B\u52300 1 2 3 4\u5370\u5230\u5C4F\u5E55\u3002\u8FD9\u662F\u56E0\u4E3A\u8F93\u51FA\u6B63\u5728\u7F13\u51B2\u4E2D\uFF0C\u9664\u975Esys.stdout\u6BCF\u6B21\u5237\u65B0\u540Eprint\u60A8\u90FD\u4E0D\u4F1A\u7ACB\u5373\u770B\u5230\u8F93\u51FA\u3002\u4ECEsys.stdout.flush()\u884C\u4E2D\u5220\u9664\u6CE8\u91CA\u4EE5\u67E5\u770B\u533A\u522B\u3002</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">import</span> time
<span class="token comment"># \u5728\u540C\u4E00\u884C\u5237\u65B0 Print()</span>
sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;\\r&#39;</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;| Type [%s] : Acc:%f \\t\\t&#39;</span> <span class="token operator">%</span><span class="token punctuation">(</span>at_tp<span class="token punctuation">,</span> acc<span class="token punctuation">)</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># \u52A0\u8FD9\u4E00\u884C\u5C31\u4F1A\u4E00\u884C\u4E00\u884C\u63A5\u7740\u5237\u65B0</span>
        
<span class="token comment"># \u8BAD\u7EC3\u65F6\u5B9E\u65F6\u663E\u793A\u6BCF\u4E2Aepoch,iter,loss\u7684\u7EDF\u8BA1\u6570\u636E</span>
sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;\\r&#39;</span><span class="token punctuation">)</span>
sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;| Epoch [%3d/%3d] Iter[%3d/%3d] : Loss:%f \\t\\t&#39;</span>
        <span class="token operator">%</span><span class="token punctuation">(</span>epoch<span class="token punctuation">,</span> MAX_EPOCHS<span class="token punctuation">,</span> counter<span class="token punctuation">,</span>
            <span class="token punctuation">(</span>train_size<span class="token operator">/</span>TRAIN_BATCH_SIZE<span class="token punctuation">)</span><span class="token punctuation">,</span>cost<span class="token punctuation">.</span>data<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>numpy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
end<span class="token operator">=</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Epoch:&#39;</span><span class="token punctuation">,</span>epoch<span class="token punctuation">,</span><span class="token string">&#39; Time taken:&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span>end<span class="token operator">-</span>start<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="excel-\u884C\u5217\u53D8\u91CF\u53D6\u503C\u8D4B\u503C-\u7528\u6765\u5904\u7406\u5B9E\u9A8C\u6570\u636E-\u{1F4CA}" tabindex="-1"><a class="header-anchor" href="#excel-\u884C\u5217\u53D8\u91CF\u53D6\u503C\u8D4B\u503C-\u7528\u6765\u5904\u7406\u5B9E\u9A8C\u6570\u636E-\u{1F4CA}" aria-hidden="true">#</a> Excel \u884C\u5217\u53D8\u91CF\u53D6\u503C\u8D4B\u503C\uFF08\u7528\u6765\u5904\u7406\u5B9E\u9A8C\u6570\u636E\uFF09\u{1F4CA}</h3><div class="language-xls ext-xls line-numbers-mode"><pre class="language-xls"><code><span class="token operator">=</span><span class="token function-name keyword">INDIRECT</span><span class="token punctuation">(</span><span class="token function-name keyword">ADDRESS</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function-name keyword">ROW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token operator">=</span><span class="token function-name keyword">INDIRECT</span><span class="token punctuation">(</span><span class="token function-name keyword">ADDRESS</span><span class="token punctuation">(</span><span class="token function-name keyword">ROW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">,</span><span class="token function-name keyword">COLUMN</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="\u56FA\u5B9A\u79CD\u5B50\u5B9E\u9A8C-\u{1F331}" tabindex="-1"><a class="header-anchor" href="#\u56FA\u5B9A\u79CD\u5B50\u5B9E\u9A8C-\u{1F331}" aria-hidden="true">#</a> \u56FA\u5B9A\u79CD\u5B50\u5B9E\u9A8C \u{1F331}</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> torch
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> random

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--seed&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">seed_torch</span><span class="token punctuation">(</span>seed<span class="token operator">=</span><span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>seed<span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">&#39;PYTHONHASHSEED&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>seed<span class="token punctuation">)</span>
    np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>seed<span class="token punctuation">)</span>
    torch<span class="token punctuation">.</span>manual_seed<span class="token punctuation">(</span>seed<span class="token punctuation">)</span>
    torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>manual_seed<span class="token punctuation">(</span>seed<span class="token punctuation">)</span>
    torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>benchmark <span class="token operator">=</span> <span class="token boolean">False</span>
    torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>cudnn<span class="token punctuation">.</span>deterministic <span class="token operator">=</span> <span class="token boolean">True</span>

SEED<span class="token operator">=</span>args<span class="token punctuation">.</span>seed
seed_torch<span class="token punctuation">(</span>seed<span class="token operator">=</span>SEED<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="\u8D85\u7EA7\u7EC8\u7AEF-\u{1F5D4}" tabindex="-1"><a class="header-anchor" href="#\u8D85\u7EA7\u7EC8\u7AEF-\u{1F5D4}" aria-hidden="true">#</a> \u8D85\u7EA7\u7EC8\u7AEF \u{1F5D4}</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
\u5B57\u8272              \u80CC\u666F              \u989C\u8272
---------------------------------------
30                40              \u9ED1\u8272
31                41              \u7D05\u8272
32                42              \u7DA0\u8272
33                43              \u9EC3\u8272
34                44              \u85CD\u8272
35                45              \u7D2B\u7D05\u8272
36                46              \u9752\u85CD\u8272
37                47              \u767D\u8272
---------------------------------------
&quot;&quot;&quot;</span>
<span class="token keyword">def</span> <span class="token function">textcolor</span><span class="token punctuation">(</span>code<span class="token operator">=</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">&#39;nt&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">return</span> <span class="token string">&#39;\\033[%sm&#39;</span> <span class="token operator">%</span> code


<span class="token keyword">print</span><span class="token punctuation">(</span>textcolor<span class="token punctuation">(</span><span class="token string">&#39;1;32;40&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>best_acc<span class="token punctuation">)</span> <span class="token operator">+</span> textcolor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,50),f={href:"https://blog.csdn.net/u014470361/article/details/81512330",target:"_blank",rel:"noopener noreferrer"},w=e("https://blog.csdn.net/u014470361/article/details/81512330"),x=p(`<h3 id="\u6253\u5370pytorch\u6A21\u578B\u7ED3\u6784-\u{1F5A5}\uFE0F" tabindex="-1"><a class="header-anchor" href="#\u6253\u5370pytorch\u6A21\u578B\u7ED3\u6784-\u{1F5A5}\uFE0F" aria-hidden="true">#</a> \u6253\u5370PyTorch\u6A21\u578B\u7ED3\u6784 \u{1F5A5}\uFE0F</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token comment"># pip install torchinfo</span>
<span class="token keyword">from</span> torchinfo <span class="token keyword">import</span> summary

device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">&quot;cuda:0&quot;</span><span class="token punctuation">)</span>
net <span class="token operator">=</span> ResNet34<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>
summary<span class="token punctuation">(</span>net<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u6700\u540E-\u{1F51A}" tabindex="-1"><a class="header-anchor" href="#\u6700\u540E-\u{1F51A}" aria-hidden="true">#</a> \u6700\u540E \u{1F51A}</h2><p>\u987A\u987A\u5229\u5229\uFF0C\u591A\u5B66\u591A\u7528\u3002</p>`,4);function q(T,P){const s=t("ExternalLinkIcon");return o(),c(l,null,[k,n("p",null,[n("a",d,[b,a(s)])]),n("p",null,[n("a",m,[h,a(s)])]),g,n("p",null,[n("a",y,[_,a(s)])]),v,n("p",null,[n("a",f,[w,a(s)])]),x],64)}var E=r(i,[["render",q]]);export{E as default};
